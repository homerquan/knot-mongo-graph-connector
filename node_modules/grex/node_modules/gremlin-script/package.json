{
  "name": "gremlin-script",
  "version": "1.0.2",
  "description": "Generate Gremlin scripts with ease",
  "main": "index.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gulthor/gremlin-script.git"
  },
  "keywords": [
    "Gremlin",
    "TinkerPop",
    "graph",
    "database",
    "graphdb",
    "graphs"
  ],
  "author": {
    "name": "Jean-Baptiste Musso",
    "email": "jbmusso+github@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gulthor/gremlin-script/issues"
  },
  "homepage": "https://github.com/gulthor/gremlin-script",
  "dependencies": {
    "lodash": "^2.4.1"
  },
  "devDependencies": {
    "gulp": "^3.8.10",
    "gulp-browserify": "^0.5.0",
    "gulp-mocha": "^2.0.0",
    "gulp-rename": "^1.2.0",
    "gulp-size": "^1.1.0",
    "gulp-uglify": "^1.0.1",
    "should": "^4.3.0"
  },
  "readme": "gremlin-script\n==============\n\nGenerate Gremlin scripts with ease.\n\nWorks in Node.js and the browser.\n\n## Installation\n\n### Node.js\n```\n$ npm install gremlin-script -S\n```\n\n### Browsers\n\nThis module works as a CommonJS, AMD module or standalone module (exported globally as `GremlinScript`).\n\n## API\n\nInstantiate a script object:\n\n```javascript\nvar GremlinScript = require('gremlin-script').GremlinScript;\nvar gremlin = new GremlinScript();\n```\n\nGet a reference to the graph:\n\n```javascript\nvar Graph = require('gremlin-script').Structure.Graph;\nvar g = new Graph('g'); // pass graph identifier/name to the constructor\n```\n\n### gremlin.line(String|Helper[, ...parameters])\n\n#### Adding a raw String line\n\n```javascript\nvar gremlin = new GremlinScript();\n\ngremlin.line('g.v(1)');\ngremlin.script.should.equal('g.v(1)\\n');\n```\n\n#### Adding a raw String line with a bound parameter (printf style)\n\n```javascript\nvar gremlin = new GremlinScript();\n\ngremlin.line('g.v(%s)', 1);\ngremlin.script.should.equal('g.v(p0)\\n');\ngremlin.params.p0.should.equal(1);\n```\n\n#### Adding a raw String line with multiple parameters (printf style)\n\n```javascript\nvar gremlin = new GremlinScript();\n\ngremlin.line('g.V(%s, %s)', 'name', 'Alice');\ngremlin.script.should.equal('g.V(p0, p1)\\n');\ngremlin.params.p0.should.equal('name');\ngremlin.params.p1.should.equal('Alice');\n```\n\n#### Adding a line with Graph and Element helpers\n\n```javascript\nvar gremlin = new GremlinScript();\nvar g = new Graph('g');\n\ngremlin.line(g.v(1));\ngremlin.script.should.equal('g.v(1)\\n');\n```\n\nBinding parameters is currently not supported when using helpers.\n\n## Author\n\nJean-Baptiste Musso - [@jbmusso](https://twitter.com/jbmusso).\n\nThis library was heavily inspired by the great work started by Frank Panetta on gRex. Thanks!\n\n## Contributors\n\nhttps://github.com/gulthor/gremlin-script/graphs/contributors\n\n## License\n\nMIT (c) 2014 Jean-Baptiste Musso\n",
  "readmeFilename": "README.md",
  "_id": "gremlin-script@1.0.2",
  "dist": {
    "shasum": "49127d48d0a5d8a6365e05ebd85ee670841caddc"
  },
  "_from": "gremlin-script@^1.0.2",
  "_resolved": "https://registry.npmjs.org/gremlin-script/-/gremlin-script-1.0.2.tgz"
}
